{"ast":null,"code":"var _jsxFileName = \"/Users/damonvecci/Backtrace/my-test/src/ViewObject.js\";\nimport React, { useState } from 'react';\n\nconst ViewObject = ({\n  valObject\n}) => {\n  const keys = Object.keys(valObject);\n  const [expanded, setExpanded] = useState(false);\n\n  const handleClick = () => {\n    console.log('expanded', expanded);\n    setExpanded(!expanded);\n  };\n\n  if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }\n    }, key, \": \"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }\n    }, value));\n  } else if (typeof value === 'object') {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginLeft: '5px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }\n    }, key, \":\"), expanded ? /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ViewObject, {\n      valObject: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 27\n      }\n    })) : /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }\n    }, \"...\"));\n  } else {\n    return null;\n  }\n};\n\nexport default ViewObject;","map":{"version":3,"sources":["/Users/damonvecci/Backtrace/my-test/src/ViewObject.js"],"names":["React","useState","ViewObject","valObject","keys","Object","expanded","setExpanded","handleClick","console","log","value","key","marginLeft"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAClC,QAAMC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYD,SAAZ,CAAb;AACA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;;AACA,QAAMO,WAAW,GAAG,MAAM;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBJ,QAAxB;AACAC,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACH,GAHD;;AAIA,MAAI,OAAOK,KAAP,KAAiB,QAAjB,IAA6B,OAAOA,KAAP,KAAiB,QAA9C,IAA0D,OAAOA,KAAP,KAAiB,SAA/E,EAA0F;AACtF,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOC,GAAP,OADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOD,KAAP,CAFJ,CADJ;AAMH,GAPD,MAOO,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAClC,wBACI;AAAK,MAAA,KAAK,EAAE;AAACE,QAAAA,UAAU,EAAE;AAAb,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,OAAO,EAAEL,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BI,GAA/B,MADJ,EAEMN,QAAQ,gBACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAM,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAEK,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAN,CADM,gBAGN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALR,CADJ;AAUH,GAXM,MAWA;AACH,WAAO,IAAP;AACH;AACJ,CA5BD;;AA8BA,eAAeT,UAAf","sourcesContent":["import React, {useState} from 'react';\n\nconst ViewObject = ({ valObject }) => {\n    const keys = Object.keys(valObject);\n    const [expanded, setExpanded] = useState(false);\n    const handleClick = () => {\n        console.log('expanded', expanded);\n        setExpanded(!expanded);\n    };\n    if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n        return (\n            <div>\n                <span>{key}: </span>\n                <span>{value}</span>\n            </div>\n          )\n    } else if (typeof value === 'object') {\n        return (\n            <div style={{marginLeft: '5px'}}>\n                <button onClick={handleClick}>{key}:</button>\n                { expanded ?\n                    <span><ViewObject valObject={value} /></span>\n                    :\n                    <span>...</span>\n                }\n            </div>\n        )\n    } else {\n        return null;\n    }\n}\n\nexport default ViewObject;"]},"metadata":{},"sourceType":"module"}