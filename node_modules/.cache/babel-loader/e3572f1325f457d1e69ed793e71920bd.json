{"ast":null,"code":"var _jsxFileName = \"/Users/damonvecci/Backtrace/my-test/src/ViewObject.js\";\nimport React, { useState } from 'react';\n\nconst ViewObject = ({\n  valObject\n}) => {\n  const keys = Object.keys(valObject);\n  const [expanded, setExpanded] = useState(false);\n  const childState = {};\n  keys.forEach(key => {\n    childState.key = useState(false);\n  });\n  console.log(`{key}Expanded`);\n\n  const parseObject = ({\n    key,\n    value\n  }) => {\n    if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }\n      }, key, \": \"), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }\n      }, value));\n    } else if (typeof value === 'object') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        onClick: () => toggleExpand(key),\n        style: {\n          marginLeft: '5px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }\n      }, key, \":\"), expanded ? /*#__PURE__*/React.createElement(ViewObject, {\n        valObject: value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }\n      }) : /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }\n      }, \"...\"));\n    } else {\n      return null;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, keys.map(key => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, parseObject({\n      key,\n      value: valObject[key]\n    }));\n  }));\n};\n\nexport default ViewObject;","map":{"version":3,"sources":["/Users/damonvecci/Backtrace/my-test/src/ViewObject.js"],"names":["React","useState","ViewObject","valObject","keys","Object","expanded","setExpanded","childState","forEach","key","console","log","parseObject","value","toggleExpand","marginLeft","map"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAClC,QAAMC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYD,SAAZ,CAAb;AACA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAMO,UAAU,GAAG,EAAnB;AACAJ,EAAAA,IAAI,CAACK,OAAL,CAAaC,GAAG,IAAI;AAChBF,IAAAA,UAAU,CAACE,GAAX,GAAiBT,QAAQ,CAAC,KAAD,CAAzB;AACH,GAFD;AAGAU,EAAAA,OAAO,CAACC,GAAR,CAAa,eAAb;;AAEA,QAAMC,WAAW,GAAG,CAAC;AAACH,IAAAA,GAAD;AAAMI,IAAAA;AAAN,GAAD,KAAkB;AAClC,QAAI,OAAOA,KAAP,KAAiB,QAAjB,IAA6B,OAAOA,KAAP,KAAiB,QAA9C,IAA0D,OAAOA,KAAP,KAAiB,SAA/E,EAA0F;AACtF,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOJ,GAAP,OADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOI,KAAP,CAFJ,CADJ;AAMH,KAPD,MAOO,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAClC,0BACI;AAAK,QAAA,OAAO,EAAE,MAAMC,YAAY,CAACL,GAAD,CAAhC;AAAuC,QAAA,KAAK,EAAE;AAACM,UAAAA,UAAU,EAAE;AAAb,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAON,GAAP,MADJ,EAEMJ,QAAQ,gBACN,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAEQ,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADM,gBAGN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALR,CADJ;AAUH,KAXM,MAWA;AACH,aAAO,IAAP;AACH;AACJ,GAtBD;;AAuBA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMV,IAAI,CAACa,GAAL,CAASP,GAAG,IAAI;AAChB,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKG,WAAW,CAAC;AAACH,MAAAA,GAAD;AAAMI,MAAAA,KAAK,EAAEX,SAAS,CAACO,GAAD;AAAtB,KAAD,CADhB,CADF;AAIA,GALA,CADN,CADJ;AAUH,CA1CD;;AA4CA,eAAeR,UAAf","sourcesContent":["import React, {useState} from 'react';\n\nconst ViewObject = ({ valObject }) => {\n    const keys = Object.keys(valObject);\n    const [expanded, setExpanded] = useState(false);\n    const childState = {};\n    keys.forEach(key => {\n        childState.key = useState(false);\n    });\n    console.log(`{key}Expanded`);\n\n    const parseObject = ({key, value}) => {\n        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n            return (\n                <div>\n                    <span>{key}: </span>\n                    <span>{value}</span>\n                </div>\n              )\n        } else if (typeof value === 'object') {\n            return (\n                <div onClick={() => toggleExpand(key)} style={{marginLeft: '5px'}}>\n                    <span>{key}:</span>\n                    { expanded ?\n                        <ViewObject valObject={value} />\n                        :\n                        <span>...</span>\n                    }\n                </div>\n            )\n        } else {\n            return null;\n        }\n    };\n    return (\n        <div>\n            { keys.map(key => {\n              return (\n                <div>\n                    {parseObject({key, value: valObject[key]})}\n                </div>\n            )})}\n        </div>\n    );\n}\n\nexport default ViewObject;"]},"metadata":{},"sourceType":"module"}